body {
  margin: 40px;
  font-family: roboto, sans;
}

input {
  width: 90%;
}

.generate {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(11, [col] 5% ) ;
  grid-template-rows: repeat(4, [row] 3em ) ;
}

.box {

}

.header-hash {
  grid-column: col 1 / span 5;
  grid-row: row;
}
.header-data {
  grid-column: col 6 / span 4;
  grid-row: row;
}
.header-user {
  grid-column: col 10 / span 2;
  grid-row: row;
}
.header-nonce {
  grid-column: col 12;
  grid-row: row;
}

.broken-out-inputs-hash {
  grid-column: col 1 / span 5;
  grid-row: row 2;
}
.broken-out-inputs-data {
  grid-column: col 6 / span 4;
  grid-row: row 2;
}
.broken-out-inputs-user {
  grid-column: col 10 / span 2;
  grid-row: row 2;
}
.broken-out-inputs-nonce {
  grid-column: col 12;
  grid-row: row 2;
}
.broken-out-inputs-increment {
  grid-column: col 13;
  grid-row: row 2;
}
.broken-out-inputs-decrement {
  grid-column: col 14;
  grid-row: row 2;
}
.broken-out-inputs-reset {
  grid-column: col 15;
  grid-row: row 2;
}

.input-text-label {
  grid-column: col 1 / span 2;
  grid-row: row 3;
}
.input-text-value {
  grid-column: col 3 / span 5;
  grid-row: row 3;
}

.output-label {
  grid-column: col 1 / span 2;
  grid-row: row 4;
}
.output-value {
  grid-column: col 3 / span 5;
  grid-row: row 4;
}



.verify {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(4, [col] 20% ) ;
  grid-template-rows: repeat(2, [row] 2em ) ;
  background-color: #fff;
  color: #444;
}

.verify-input-text-label {
  grid-column: col 1;
  grid-row: row 1;
}
.verify-input-text-value {
  grid-column: col 2 / span 3;
  grid-row: row 1;
}

.verify-output-label {
  grid-column: col 1;
  grid-row: row 2;
}
.verify-output-value {
  grid-column: col 2 / span 3;
  grid-row: row 2;
}


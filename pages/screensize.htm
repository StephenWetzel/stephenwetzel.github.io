<!DOCTYPE html>
<html><head><title>Screen Height And Width From Diagonal Length Calculator</title>
<meta charset="UTF-8">
<link rel=stylesheet href="../css/style.css" type="text/css">
<script type="text/javascript"></script>
<style type="text/css">
table {padding-bottom:20px;}
table * {padding-right:5px;}
</style>
</head>
<body class="reading">

<form name="mainform" action="screensize.htm">
<p class="nobreak"><strong>Enter screen info here:</strong></p>
<table>
	<tr>
		<td>Diagonal size <input type="text" name="size" size=10 onkeyup="calc()"></td>
		<td> Ratio <select id="ratioDropDown" onChange="calc()">
		</select></td>
	</tr>
	<tr>
		<td>
</table>
<p class="nobreak"><strong>What size screens with the same diagonal, but different aspect ratios will be:</strong></p>
<table id="sameDiagonal">
</table>
<p class="nobreak"><strong>Diagonal needed for equal height, width, or area:</strong></p>
<table id="sameArea">
</table>

</form>
<script src="../js/shared.js"></script>
<script type="text/javascript">
<!--
var link=document.mainform //short cut

screenSizes = [
	{"width": 1280, "height": 1024},
	{"width": 1280, "height":  800},
	{"width": 1920, "height": 1080},
	{"width": 1280, "height":  720},
	{"width": 1024, "height":  768},
	{"width":  800, "height":  600}
]

assignRatios(screenSizes);
var listOfRatios = getListOfRatios(screenSizes);
buildTables(screenSizes, listOfRatios);

function findRatio(width, height)
{//Given a screen width and height returns a ratio
	var widthRatio = 80;
	var heightRatio = roundTo(height / (width / widthRatio), 0)
	var gcdRatio = gcd(heightRatio, widthRatio);
	heightRatio /= gcdRatio;
	widthRatio /= gcdRatio;
	if (widthRatio == 8)
	{// special case for 8:5 = 16:10
		heightRatio *= 2;
		widthRatio *= 2;
	}
	return (widthRatio + ':' + heightRatio)
}

function assignRatios(sizes)
{//go through an array of objects, and assign ratios based on widths and heights
	for (var ii = 0; ii < sizes.length; ii++)
	{
		sizes[ii].fracRatio = sizes[ii].width / sizes[ii].height;
		sizes[ii].ratio = findRatio(sizes[ii].width, sizes[ii].height);
	}
}

function getListOfRatios(sizes)
{//return an array of all the ratios
	var ratios = new Array();
	for (var ii = 0; ii < sizes.length; ii++)
	{//go through all the ratios in the object, and find unique ones
		if (ratios.indexOf(sizes[ii].fracRatio) == -1)
		{//this is a new ratio
			ratios.push(sizes[ii].fracRatio);
		}
	}
	ratios.sort();
	return ratios;
}

function findThisSize(sizes, ratio)
{//return the first object in the array that matches this ratio
	//there will likely be multiple sizes with this ratio
	//maybe make a second version that returns them all
	for (var ii = 0; ii < sizes.length; ii++)
	{
		if (sizes[ii].fracRatio == ratio)
		{//if the ratio matches then return it and stop the loop
			return sizes[ii];
		}
	}
}

function findDimensions(ratio, diagonal)
{//some trig to find height, and width for a screen
	var theta = Math.atan(1/ratio); //1.778 = w/h, so we need to take inverse
	var height = Math.sin(theta) * diagonal;
	var width  = Math.cos(theta) * diagonal;
	var area   = height * width;
	return [height, width, area];
}

function findEqualSizes(ratioOld, diagonalOld, ratioNew)
{//given the old ratio and diagonal, find the new diagonals need for equal height, width, or area
	var theta = Math.atan(1/ratioNew); //1.778 = w/h, so we need to take inverse
	var temp = findDimensions(ratioOld, diagonalOld); //get the dimensions of old screen
	var height = temp.shift();
	var width = temp.shift();
	var area = temp.shift();
	
	var diagonalEqualHeight  = width  / Math.cos(theta);
	var diagonalEqualWidth = height / Math.sin(theta);
	var diagonalEqualArea = Math.sqrt(area / (Math.sin(theta) * Math.cos(theta)));
	return [diagonalEqualHeight, diagonalEqualWidth, diagonalEqualArea];
}


function buildTables(sizes, ratios)
{//build the inner html for both tables based on the screen sizes passed in
	var diagonalTable = '';
	var areaTable = '';
	var dropDown = '';
	var textWidth = 5;
	for (var ii = 0; ii < ratios.length; ii++)
	{
		thisSize = findThisSize(sizes, ratios[ii]);
		
		diagonalTable += "<tr><td>"+thisSize.ratio+"</td><td>"+thisSize.width+"x"+thisSize.height+"</td><td>"+roundTo(thisSize.fracRatio)+"</td>";
		diagonalTable += '<td>Height <input type="text" name="height'+ii+'" size="'+textWidth+'"></td>';
		diagonalTable += '<td>&nbsp;&nbsp;Width <input type="text" name="width'+ii+'" size="'+textWidth+'"></td>';
		diagonalTable += '<td>&nbsp;&nbsp;Area  <input type="text" name="area'+ii+'"  size="'+textWidth+'"></td>';
		diagonalTable += '</tr>\n';
		
		areaTable += "<tr><td>"+thisSize.ratio+"</td><td>"+thisSize.width+"x"+thisSize.height+"</td><td>"+roundTo(thisSize.fracRatio)+"</td>";
		areaTable += '<td>Equal Height <input type="text" name="height'+ii+'e" size="'+textWidth+'"></td>';
		areaTable += '<td>&nbsp;&nbsp;Equal Width <input type="text" name="width'+ii+'e" size="'+textWidth+'"></td>';
		areaTable += '<td>&nbsp;&nbsp;Equal Area <input type="text" name="area'+ii+'e" size="'+textWidth+'"></td>';
		areaTable += '</tr>\n';
		
		dropDown += '<option value="'+thisSize.fracRatio+'">'+thisSize.ratio+', '+thisSize.width+"x"+thisSize.height+' = '+roundTo(thisSize.fracRatio)+'</option>'
	}
	
	document.getElementById('sameDiagonal').innerHTML = diagonalTable;
	document.getElementById('sameArea').innerHTML = areaTable;
	document.getElementById('ratioDropDown').innerHTML = dropDown;
}

//we could combine this with the above html generation and not use text boxes
//I kind of like the text boxes though for values that change
function calc()
{
	var diagonal = link.size.value
	var ratio = link.ratioDropDown.value
	for (var ii = 0; ii < listOfRatios.length; ii++)
	{
		thisSize = findThisSize(screenSizes, listOfRatios[ii]);
		var temp = findDimensions(listOfRatios[ii], diagonal);
		var height = temp.shift();
		var width = temp.shift();
		var area = temp.shift();
		
		//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment
		var temp = findEqualSizes(ratio, diagonal, listOfRatios[ii]);
		var diagonalEqualHeight = temp.shift();
		var diagonalEqualWidth = temp.shift();
		var diagonalEqualArea = temp.shift();
		
		link['height'+ii].value = roundTo(height);
		link['width'+ii].value  = roundTo(width);
		link['area'+ii].value   = roundTo(area);
		link['height'+ii+'e'].value = roundTo(diagonalEqualHeight);
		link['width'+ii+'e'].value  = roundTo(diagonalEqualWidth);
		link['area'+ii+'e'].value   = roundTo(diagonalEqualArea);
	}
}

function addResolution()
{
	var newRes = document.getElementById('newRes').value;
	var resRegex = /(\d+).+(\d+)/g;
	var groups = resRegex.exec(newRes);
	
	var tempObj = {"width": groups[0], "height": groups[1]};
	screenSizes.push(tempObj);
	console.log(tempObj);
	assignRatios(screenSizes);
	var listOfRatios = getListOfRatios(screenSizes);
	buildTables(screenSizes, listOfRatios);
}


-->
</script>
<hr>
<p>If you don't know what ratio your screen is, you just take the resolution and divide the larger number by the smaller.  1024/768=1.33  Here's the summary:<br>
5:4, 1280x1024 = 1.25, Non-widescreen LCD monitors.<br>
4:3, 800x600, 1024x768 = 1.33, Non-widescreen TVs and monitors<br>
16:10, 1280x800, 1680x1050, 1920x1200 = 1.6, Widescreen monitors<br>
16:9, 1280x720, 1600x900, 1920x1080, 2560x1440 = 1.78, Widescreen TVs and newer monitors<br>
</p>

<p>Type a new resolution here to add it to the list: <input type="text" id="newRes" size=15> 
<input type="button" value="Add Resolution" onclick="addResolution()"></p>

</body></html>
